name: Deploy

on:
  workflow_run:
    workflows: ["build"]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Fetch the source code 
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Set up SSH private key
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      # 3. Add VPS address to the host
      - name: Add VPS to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.VPS_PORT }}" "${{ secrets.VPS_HOST }}" >> ~/.ssh/known_hosts
      
      # 4. push secrets into etcd 
      - name: Replace environment variables in secrets.yaml
        run: |
          envsubst < Kubernetes/secrets.yaml > k8s/secrets.resolved.yaml
        env:
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}

      # 5. push config map into etcd 
      - name: Replace environment variables in configmap.yaml
        run: |
          cp Kubernetes/configmap.yaml  k8s/configmap.resolved.yaml
          
      # 6. push mysql to VPS
      - name: Render mysql manifest
        run: |
          cp Kubernetes/Freelancer-mysql.yaml k8s/mysql.resolved.yaml
          
      # 7. push app yaml to VPS
      - name: Render app manifest
        run: |
          export IMAGE="$REGISTRY/$IMAGE_NAME:$TAG"
          envsubst < Kubernetes/Freelancer-app.yaml > k8s/app.resolved.yaml

      # 6. deploy     
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/secrets.resolved.yaml
          kubectl apply -f k8s/configmap.resolved.yaml
          kubectl apply -f k8s/app.resolved.yaml
          kubectl apply -f k8s/mysql.resolved.yaml

