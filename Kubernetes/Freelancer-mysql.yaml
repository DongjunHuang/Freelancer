apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  serviceName: db
  replicas: 1
  selector:
    matchLabels: { app: mysql }
  template:
    metadata:
      labels: { app: mysql }
    spec:
      containers:
      - name: mysql
        image: mysql:8
        ports: [{ containerPort: 3306 }]
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom: { secretKeyRef: { name: freelancer-secret, key: MYSQL_ROOT_PASSWORD } }
        - name: MYSQL_DATABASE
          valueFrom: { secretKeyRef: { name: freelancer-secret, key: MYSQL_DATABASE } }
        - name: MYSQL_USER
          valueFrom: { secretKeyRef: { name: freelancer-secret, key: MYSQL_USER } }
        - name: MYSQL_PASSWORD
          valueFrom: { secretKeyRef: { name: freelancer-secret, key: MYSQL_PASSWORD } }
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
        resources:
          requests: { cpu: "200m", memory: "256Mi" }
          limits:   { cpu: "500m", memory: "512Gi" }

  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 45Gi
---          
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: mysql
  ports:
  - port: 3306
    targetPort: 3306
  clusterIP: None
